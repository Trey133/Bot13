{
  "name": "google-search-scraper",
  "version": "0.0.2",
  "description": "Google search scraper with captcha solving support",
  "author": {
    "name": "thibauts"
  },
  "license": "MIT",
  "main": "index.js",
  "dependencies": {
    "cheerio": "~0.13.1",
    "request": "~2.33.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thibauts/node-google-search-scraper.git"
  },
  "keywords": [
    "google",
    "search",
    "scraper",
    "decaptcher",
    "captcha"
  ],
  "readme": "google-search-scraper\n=============\n### Google search scraper with captcha solving support\n\nThis module allows google search results extraction in a simple yet flexible way, and handles captcha solving transparently (through external services or your own hand-made solver).\n\nOut of the box you can target a specific google search host, specify a language and limit search results returned. Extending these defaults with custom URL params is supported through options.\n\nA word of warning: This code is intented for educational and research use only. Use responsibly.\n\n\nInstallation\n------------\n\n``` bash\n$ npm install google-search-scraper\n```\n\n\nExamples\n--------\n\nGrab first 10 results for 'nodejs'\n\n``` javascript\nvar scraper = require('google-search-scraper');\n\nvar options = {\n  query: 'nodejs',\n  limit: 10\n};\n\nscraper.search(options, function(err, url) {\n  // This is called for each result\n  if(err) throw err;\n  console.log(url)\n});\n``` \n\nVarious options combined\n\n``` javascript\nvar scraper = require('google-search-scraper');\n\nvar options = {\n  query: 'grenouille',\n  host: 'www.google.fr',\n  lang: 'fr',\n  age: 'd1', // last 24 hours ([hdwmy]\\d? as in google URL)\n  limit: 10,\n  params: {} // params will be copied as-is in the search URL query string\n};\n\nscraper.search(options, function(err, url) {\n  // This is called for each result\n  if(err) throw err;\n  console.log(url)\n});\n```\n\nExtract all results on edu sites for \"information theory\" and solve captchas along the way\n\n``` javascript\nvar scraper = require('google-search-scraper');\nvar DeathByCaptcha = require('deathbycaptcha');\n\nvar dbc = new DeathByCaptcha('username', 'password');\n\nvar options = {\n  query: 'site:edu \"information theory\"',\n  age: 'y', // less than a year,\n  solver: dbc\n};\n\nscraper.search(options, function(err, url) {\n  // This is called for each result\n  if(err) throw err;\n  console.log(url)\n});\n```\n\nYou can easily plug your own solver, implementing a solve method with the following signature:\n\n```javascript\nvar customSolver = {\n  solve: function(imageData, callback) {\n    // Do something with image data, like displaying it to the user\n    // id is used by BDC to allow reporting solving errors and can be safely ignored here\n    var id = null; \n    callback(err, id, solutionText);\n  }\n};\n``` \n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/thibauts/node-google-search-scraper/issues"
  },
  "_id": "google-search-scraper@0.0.2",
  "dist": {
    "shasum": "8e808d7a9cde2c79dffed99f16f51ff0baead47e"
  },
  "_from": "google-search-scraper@*",
  "_resolved": "https://registry.npmjs.org/google-search-scraper/-/google-search-scraper-0.0.2.tgz"
}
